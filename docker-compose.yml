version: "3"
services:

  mysql_ts_api:
    image: mysql:latest
    container_name: mysql_ts_api
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - ${MYSQL_DATA_DIR}:/var/lib/mysql
      - ./my.cnf:/etc/my.cnf
      - ./data-mount:/data-mount
    restart: always

  ts-api:
    container_name: ts-api
    build:
      context: .
      dockerfile: ./api/Dockerfile
    ports:
      - "${API_PORT}:9000"
    volumes:
      - .:/var/www/html
    depends_on:
      - mysql_ts_api



  phpmyadmin_ts_api:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin_ts_api
    environment:
      PMA_HOST: mysql_ts_api
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: asdfasdf
    ports:
      - "${PMA_PORT}:80"
    restart: always
    depends_on:
      - mysql_ts_api


  ts-ui:
    container_name: ts-ui
    build:
      context: .
      dockerfile: ./ui/Dockerfile
    ports:
      - "${UI_PORT}:3000"
    volumes:
      - .:/app
    depends_on:
      - ts-api

  portainer_ts_api_mysql:
    image: portainer/portainer-ce:latest
    container_name: portainer_ts_api_mysql
    ports:
      - "${PORTAINER_PORT}:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

